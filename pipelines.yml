resources:
  - name: dbp_repo_stg
    type: GitRepo
    configuration:
      gitProvider: HelloAppIntegration         
      path: michaelyamit/hello-app  
      branches:
        include: main
        
  - name: dbp_image_stg
    type: Image
    configuration:
      registry: ArtifactoryIntegration      
      sourceRepository: docker_local   # required if registry is Artifactory
      region: eu-central-1
      imageName: amitmichaely.jfrog.io/docker-local/hello-app  # replace with your image path and name
      imageTag: latest
      autoPull: true
      
  - name: dbp_build_stg
    type: BuildInfo
    configuration:
      sourceArtifactory:  ArtifactoryIntegration
      buildName:  res_<resource_name>_buildName
      buildNumber: res_<resource_name>_buildNumber
      
  - name: simplehelmRepo_docker_stg
    type: GitRepo
    configuration:
      gitProvider: HelloAppIntegration
      path: michaelyamit/hello-app
      files:
        include: "Dockerfile|server.js|package.json" 
        
  - name: simplehelmDockerImage_stg
    type: Image
    configuration:
      registry: ArtifactoryIntegration
      sourceRepository: docker_local   # required if registry is Artifactory
      region: eu-central-1
      imageName: amitmichaely.jfrog.io/docker-local-stg/hello-app
      imageTag: latest
      
  - name: simplehelmRepo_chart_stg
    type: GitRepo
    configuration:
      gitProvider: HelloAppIntegration
      path: michaelyamit/hello-app
      files:
        include: "vfroghelmchart.*"
        
  - name: vfrog_helm_chart_stg
    type: HelmChart
    configuration:
      sourceArtifactory: ArtifactoryIntegration
      repository: helm-local
      chart: vfroghelmchart
      version: ${run_number}
      
      
pipelines:
  - name: pipeline_dbp_stg
    configuration:
      nodePool: u18-static
    steps:
      - name: docker_build_stg
        type: DockerBuild
        configuration:
          affinityGroup: dbp_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: amitmichaely.jfrog.io/docker-local/hello-app  # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: dbp_repo_stg
          integrations:
            - name: ArtifactoryIntegration 
            
      - name: docker_push_stg
        type: DockerPush
        configuration:
          affinityGroup: dbp_group
          targetRepository: docker-local-stg
          integrations:
            - name: ArtifactoryIntegration   
          inputSteps:
            - name: docker_build_stg
          outputResources:
            - name: dbp_image_stg
            
      - name: build_info_stg
        type: PublishBuildInfo
        configuration:
          #inherits from bash
          priority: 10
          inputSteps:
            - name: docker_push_stg
          outputResources:
            - name: dbp_build_stg
            
      - name: scan_stg
        type: XrayScan
        configuration:
          #inherits from bash
          priority: 11
          failOnScan: false       
          inputResources:
            - name: dbp_build_stg           # required
              trigger: true
     
      - name: publish_helm_chart_stg
        type: HelmPublish
        configuration:
          priority: 100
          helmVersion: 3
          chartPath: vfroghelmchart
          
          inputSteps:
            - name: docker_push_stg
          inputResources:
            - name: dbp_repo_stg
          outputResources:
            - name: vfrog_helm_chart_stg
          
        execution:
          onStart:
            - export HELM_VERSION="3.4.1"
            - curl -LO "https://get.helm.sh/helm-v$HELM_VERSION-linux-amd64.tar.gz"
            - tar -xzf "helm-v$HELM_VERSION-linux-amd64.tar.gz"
            - ln -sf "$PWD/linux-amd64/helm" /usr/local/bin/helm
            - ln -sf "$PWD/linux-amd64/helm" /usr/local/bin/helm3      
      
      - name: deploy_helm_chart_stg
        type: HelmDeploy
        configuration:
          priority: 101
          helmVersion: 3
          releaseName: vfrog
          flags: --namespace stg --debug --set image.repository=amitmichaely.jfrog.io/docker-local-stg/hello-app --set image.tag=${run_number}

          integrations:
            - name: GCPIntegration
            - name: KubernetesIntegration
          #inputSteps:
           # - name: publish_helm_chart
          inputResources:
            - name: vfrog_helm_chart_stg
           # - name: dbp_image_stg
          
        execution:
          onStart:
            - export HELM_VERSION="3.4.1"
            - curl -LO "https://get.helm.sh/helm-v$HELM_VERSION-linux-amd64.tar.gz"
            - tar -xzf "helm-v$HELM_VERSION-linux-amd64.tar.gz"
            - ln -sf "$PWD/linux-amd64/helm" /usr/local/bin/helm
            - ln -sf "$PWD/linux-amd64/helm" /usr/local/bin/helm3 
            - gcloud app update
            - gcloud container clusters get-credentials vfrog --zone europe-west1-c --project vfrog-projects
          onSuccess:  
            - kubectl -n stg expose deployment vfrog-vfroghelmchart --name=vfrog-vfroghelmchart-service --type=LoadBalancer --port 80 --target-port 8080
          

    
